searchState.loadedDescShard("modern_robotics", 0, "Computes the adjoint representation of a homogeneous …\nConverts a 3-vector of exponential coordinates for …\nConverts a 6-vector of exponential coordinates into screw …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes the matrix exponential of a matrix in so(3)\nComputes the matrix exponential of an se3 representation …\nComputes the matrix logarithm of a rotation matrix\nComputes the matrix logarithm of a homogeneous …\nDetermines whether a scalar is small enough to be treated …\nNormalizes a vector\nInverts a rotation matrix.\nConverts a rotation matrix and a position vector into …\nTakes a parametric description of a screw axis and …\nConverts an se3 matrix into a spatial velocity vector\nConverts an so(3) representation to a 3-vector\nInverts a homogeneous transformation matrix\nConverts a homogeneous transformation matrix into a …\nConverts a spatial velocity vector into a 4x4 matrix in se3\nConverts a 3-vector to an so(3) representation\nComputes the adjoint representation of a homogeneous …\nConverts a 3-vector of exponential coordinates for …\nConverts a 6-vector of exponential coordinates into screw …\nComputes the matrix exponential of a matrix in so(3)\nComputes the matrix exponential of an se3 representation …\nComputes the matrix logarithm of a rotation matrix\nComputes the matrix logarithm of a homogeneous …\nInverts a rotation matrix.\nConverts a rotation matrix and a position vector into …\nTakes a parametric description of a screw axis and …\nConverts an se3 matrix into a spatial velocity vector\nConverts an so(3) representation to a 3-vector\nInverts a homogeneous transformation matrix\nConverts a homogeneous transformation matrix into a …\nConverts a spatial velocity vector into a 4x4 matrix in se3\nConverts a 3-vector to an so(3) representation\nDetermines whether a scalar is small enough to be treated …\nNormalizes a vector")